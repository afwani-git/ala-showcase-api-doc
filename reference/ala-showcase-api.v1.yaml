openapi: 3.0.0
info:
  title: "ala-showcase-api  \U0001F680"
  version: '1.0'
  contact:
    name: afwani shofiyulloh
    email: afwani123@gmail.com
  description: design api spec
servers:
  - url: 'http://localhost:3000/apis'
paths:
  /gentoken:
    get:
      summary: Your GET endpoint
      tags:
        - token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  foo:
                    type: string
        '401':
          description: Unauthorized
      operationId: get-gentoken
      description: 'lorem ipsum '
      security:
        - X-Ala-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  '/apis/partner/{slug}/':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - partner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  messages:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Partner'
                  '':
                    type: string
              examples:
                fetch-data-partner-example-res:
                  value:
                    status: string
                    messages: string
                    data:
                      - nama: helo
                        deskripsi: world
        '401':
          $ref: '#/components/responses/unauthorized-res'
      operationId: get-apis-partner-slug-info
      security:
        - X-Ala-Token: []
  '/apis/partner/{slug}/info':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - partner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  UUID:
                    type: string
                  Type:
                    type: string
                  Code:
                    type: string
                  Name:
                    type: string
                  FullName:
                    type: string
                  Logo:
                    type: string
                  Image:
                    type: string
                  Latitude:
                    type: string
                  Longitude:
                    type: string
                  Address:
                    type: string
                  Region:
                    type: string
              examples:
                example-1:
                  value:
                    UUID: '1'
                    Type: Ikan
                    Code: IKN-765
                    Name: Budi
                    FullName: Budi Santoso
                    Logo: /img/logo.jpg
                    Image: /img/image.jpg
                    Latitude: '-7.937933'
                    Longitude: '112.626672'
                    Address: Jl. Soekarno - Hatta Rembuksari No.1 A Kota Malang
                    Region: Jawa timur
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: cannot found this partner
          headers: {}
        '401':
          $ref: '#/components/responses/unauthorized-res'
      operationId: get-apis-partner-info
      description: this endpoint will get all data detail about selected partner
      parameters: []
      security:
        - X-Ala-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                '':
                  type: string
        description: ''
  '/apis/partner/{slug}/product/list':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    UUID:
                      type: string
                    name:
                      type: string
                    price:
                      type: string
                    description:
                      type: string
              examples:
                example-fetch-list-product-by-selected-partner:
                  value:
                    - UUID: '1'
                      name: bayam
                      price: Rp.2000
                      description: bayam segar enak mantap
                    - UUID: '2'
                      name: sawi
                      price: Rp.3000
                      description: sawi segar enak mantap bergizi
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: product not found
        '401':
          $ref: '#/components/responses/unauthorized-res'
      operationId: get-apis-partner-slug-product-list
      description: this endpoint will get list all data product selected partner
      security:
        - X-Ala-Token: []
      tags:
        - partner
  '/apis/partner/{slug}/product/{slug}/info':
    parameters:
      - schema:
          type: string
        name: slug
        in: path
        required: true
      - schema:
          type: string
        name: slug
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  UUID:
                    type: string
                  name:
                    type: string
                  price:
                    type: string
                  description:
                    type: string
              examples:
                example-fetch-data-selected-product:
                  value:
                    UUID: '1'
                    name: bayam
                    price: Rp.2000
                    description: bayam mantap enak
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    message: cannot find selected product
        '401':
          $ref: '#/components/responses/unauthorized-res'
      operationId: get-apis-partner-slug-product-slug-info
      description: this endpoint will get detail data about selected product
      security:
        - X-Ala-Token: []
      tags:
        - partner
  /apis/category/list:
    get:
      summary: Get List Of Category
      tags:
        - category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type:
                      - string
                      - number
                  messages:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
              examples:
                example-category-list-res:
                  value:
                    - UUID: '0001'
                      Code: CAT-001
                      Image: vegetables
                      Description: /img/category/vege01.jpg
                      Order: '12'
                      IsDraft: Public
                      DraftBy: c0c29d6e-9082-4516-a41c-4aa5e142c392
                    - UUID: '0002'
                      Code: CAT-002
                      Image: Fruit
                      Description: /img/category/fruit01.jpg
                      Order: '50'
                      IsDraft: Draf
                      DraftBy: c0c29d6e-9082-4516-a41c-4aa5e142c392
      operationId: get-apis-category-list
      description: 'this endpoint will be return category list '
      security:
        - X-Ala-Token: []
      parameters: []
components:
  schemas:
    Partner:
      title: Partner
      type: object
      x-examples: {}
      properties:
        UUID:
          type: string
          format: uuid
          description: Partner Unique Identifier
        Type:
          type: string
          enum:
            - Driver
            - Warehose
          description: |-
            Partner Type (UUID) 

            uuid : type

            2debfd7a-2c9c-11ea-978f-2e728ce88125 : Driver
            2debfa82-2c9c-11ea-978f-2e728ce88125 : Warehouse
          format: uuid
        Code:
          description: Partner code
          type: string
        Name:
          type: string
          description: Partner Username / Slug
        FullName:
          type: string
          description: Partner Full Name
        Logo:
          type: string
          description: Partner Logo URL
        Image:
          type: string
          description: Partner Image URL
        Latitude:
          type: string
          description: Partner Latitude
        Longitude:
          type: string
          description: Partner Longitude
        Address:
          type: string
          description: Partner Address
        Region:
          type: string
          description: Partner Region
      description: ''
    Category:
      type: object
      title: Category
      description: ''
      properties:
        UUID:
          type: string
          description: Category Unique Identifier
          format: uuid
        Code:
          type: string
          description: Category Code / Slug
        Image:
          type: string
          description: Category Name
        Description:
          type: string
          description: Category Image URL
        Order:
          type: string
          description: Category Index Order (int)
        IsDraft:
          type: string
          description: Category access is Draft or Public
          enum:
            - Draft
            - Public
          example: Draft
        DraftBy:
          type: string
          description: User who create the Category (if is draft) (uuid) (relation to partner)
          format: uuid
    Good:
      title: Good
      type: object
      x-examples: {}
      properties:
        UUID:
          type: string
          description: Good Unique Identifier
          format: uuid
        Code:
          type: string
          description: Good Code / Slug
        Category:
          type: string
          description: Good Category (uuid) (Relation with Category)
          format: uuid
        Name:
          type: string
          description: Good Name
        Image:
          type: string
          description: Good Image URL
        Aliases:
          type: array
          description: Good Alias / Another Name (array string)
          items:
            type: string
        Description:
          type: string
          description: Good Description
        UnitType:
          type: string
          description: |-
            Good Unit Type
            - 15a481f2-af27-11ea-b3de-0242ac130004 : Grams
            - 15a4840e-af27-11ea-b3de-0242ac130004 : Kilograms
            - 15a48652-af27-11ea-b3de-0242ac130004 : Quantities
            - 15a487c4-af27-11ea-b3de-0242ac130004 : Liters
          format: uuid
        UnitValue:
          type: number
          description: Good Unit Value (number/float/double)
        IsFixed:
          type: boolean
          description: Good Fixed Unit flag (bool) (if true cannot order with custom)
        IsDraft:
          type: string
          description: Good access is Draft or Public
          enum:
            - Draft
            - Public
        DraftBy:
          $ref: '#/components/schemas/Partner'
    Product:
      title: Product
      type: object
      description: this model not fix!
      properties:
        UUID:
          type: string
          format: uuid
          description: Product Unique Identifier
        GoodVariant:
          $ref: '#/components/schemas/GoodVariant'
        Good:
          $ref: '#/components/schemas/Good'
        User:
          $ref: '#/components/schemas/Partner'
        Image:
          type: string
          description: Product Image URL
        Description:
          type: string
          description: Product Description
        FirstRegisteredAt:
          type: string
          description: First Timestamp Product Created
        PricePerSet:
          type: string
          description: Price Per Set (Number/Float/Double) (It will depend on Unit Value on Good Variant / Good)
        IsAvailable:
          type: boolean
          description: Product Availability Flag (Bool)
        IsActive:
          type: boolean
          description: Product Active Flag (Bool) (It for Soft-Delete and Recoverable)
        isFixed:
          type: boolean
          description: Product Fixed Unit Flag (Bool) (If true cannot order with custom)
        DiscountType:
          type: string
          description: 'Product Discount Type- : Fixedc2795a62-7360-11eb-9439-0242ac130002- : Percentagec2795c7e-7360-11eb-9439-0242ac130002'
          format: uuid
        DiscountValue:
          type: number
          description: Product Discount Value based on DiscountType (Number/Float/Double)
        DiscountAmount:
          type: string
          description: 'Product Price Cut/Off Amount (Number/Float/Double) (eg. Type is Percentage and Value is 15, it mean Discount Amount is 15% from PricePerSet)'
        DiscountActive:
          type: boolean
          description: Product Discount Active Flag (Bool)
    Country:
      title: Country
      type: object
      properties:
        UUID:
          type: string
          format: uuid
          description: Country Unique Identifier
        Code:
          type: string
          description: Code country
        Name:
          type: string
          description: Country Name
        VoteScore:
          type:
            - string
            - number
          description: Total Country Core
        VoteCount:
          type:
            - string
            - number
          description: |
            Total Country Voter
        FirstAvailableAt:
          type: string
          format: date-time
          description: |
            First Timestamp Country Available
        IsAvailable:
          type: boolean
          description: Country availability flag
        Properties:
          type: string
          description: Country another Properties
      description: ''
    Region:
      title: Region
      type: object
      properties:
        UUID:
          type: string
          description: Region Unique Identifier
        Country:
          $ref: '#/components/schemas/Country'
        Code:
          type: string
          description: 'Region Code (Format: )< CountryCode >:< RegionName >'
        Name:
          type: string
          description: Region Name
        VoteScore:
          type:
            - string
            - number
          description: Total Region Core
        VoteCount:
          type:
            - string
            - number
          description: Total Region Voter
        FirstAvailableAt:
          type: string
          description: First Timestamp Region Available
        IsAvailable:
          type: boolean
    GoodVariant:
      title: GoodVariant
      type: object
      description: Good Variant attributes
      properties:
        UUID:
          type: string
          description: Good Variant Unique Identifier
        Code:
          type: string
          description: Good Variant Code / Slug
        Good:
          $ref: '#/components/schemas/Good'
        Name:
          type: string
          description: Good Variant Name (Main will be filled )@
        Image:
          type: string
          description: Good Variant Image URL
        Description:
          type: string
          description: Good Variant Description
        UnitValue:
          type: number
          description: Good Variant Unit Value (Number/Float/Double)
        IsDraft:
          type: string
          description: Good Variant access is Draft or Public
          enum:
            - Draft
            - Public
        DraftBy:
          $ref: '#/components/schemas/Partner'
    AvailableVote:
      title: AvailableVote
      type: object
      properties:
        UUID:
          type: string
          format: uuid
          description: Available Vote Unique Identifier
        Region:
          type: string
          description: Region (UUID) (Relation with Region)
          format: uuid
        DeviceID:
          type: string
          description: Client Device ID (Unique per Region
        AppID:
          type: string
          description: Client AppID (eg. )com.gear.web.peacock.ala
        Email:
          type: string
          description: Client Email
        Latitude:
          type: string
          description: Client Latitude
        Longitude:
          type: string
          description: Client Longitude
        Recommendation:
          type: number
          description: Client Recommendation (0 - 5)
          minimum: 0
          maximum: 5
          exclusiveMinimum: false
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 0
        Properties:
          type: string
      required:
        - UUID
        - Region
        - DeviceID
        - AppID
        - Email
        - Latitude
        - Longitude
        - Recommendation
      description: Available Vote is data structure for Coverage Vote
  securitySchemes:
    X-Ala-Token:
      name: API Key
      type: apiKey
      in: header
  responses:
    unauthorized-res:
      description: 'Response for unauthorized request and validation token '
      content:
        application/json:
          schema:
            type: object
            properties:
              staus:
                type: number
                description: status-code
                example: 401
                default: 401
              messages:
                type: string
                description: Error Messages
                example: Require Api Token
                default: Require Api Token
              data:
                type: array
                items: {}
          examples:
            unauthorized-response-example:
              value:
                staus: 401
                messages: Require Api Token
                data:
                  - null
tags:
  - name: overview
